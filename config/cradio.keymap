/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include "german.keycodes"

// Layer definitions
    #define BASE 0
    #define SYM 1
    #define EXT 2
    #define FNC 3
    #define SYM2 4
    #define ACCENT 5
	#define SETTINGS 6

	
&mt {
  //  flavor = "tap-preferred";
   // tapping_term_ms = <200>;
};

/ { 

    combos {
        compatible = "zmk,combos";
        // both left thumb keys
	combo_settings {
			timeout-ms = <300>;
			key-positions = <30 31>;
			bindings = <&mo SETTINGS>;
				};
        

        
    };

        keymap {
                compatible = "zmk,keymap";
                
       // Base alpha layer
       		default_layer {
		bindings = <
		&kp DE_Q &kp DE_W &kp DE_E &kp DE_R &kp DE_T 						&kp DE_Z &kp DE_U  &kp DE_I    &kp DE_O   &kp DE_P 
		&kp DE_A &kp DE_S &kp DE_D &kp DE_F &kp DE_G 			        	        &kp DE_H &kp DE_J &kp DE_K &kp DE_L &kp LCTRL
		&kp DE_Y &kp DE_X &kp DE_C &kp DE_V &kp DE_B				      		&kp DE_N &kp DE_M  &kp DE_COMM &kp DE_DOT &kp BSPC
          				&mo EXT &kp LSHIFT  						&kp SPC &mo SYM
		>;
		};

 	// Main modifiers and arrow keys
       		ext_layer {
		bindings = <
		&kp DE_ASTR  	&kp DE_PLUS    &kp DE_1    &kp DE_2    &kp DE_3			&kp DE_AT &kp UP &kp DE_EURO &kp DE_SS &kp DE_UDIA 
		&kp DE_SLSH    &kp DE_MINS    &kp DE_4      &kp DE_5     &kp DE_6 		&kp LEFT &kp DOWN  &kp RIGHT &kp DE_ODIA  &kp DE_ADIA 
		&kp DE_EQL    &kp DE_0 		&kp DE_7 &kp DE_8  &kp DE_9 			&kp DE_LPRN &kp DE_RPRN &kp DE_QUES &kp DE_EXLM  &kp BSPC 
					    &trans  &kp LSHIFT  					&kp RET &kp DEL 
		>;
		};
		
        // High frequency symbols
		sym_layer {
		bindings = <
		&kp DE_LCBR  &kp DE_RCBR &kp DE_QUOT  &kp DE_DQUO  &kp DE_SECT    			&kp ESC  &kp TAB &kp DE_CIRC &kp DE_ACUT &kp DE_GRV 
		&kp DE_LBRC  &kp DE_RBRC  &kp DE_DLR  &kp DE_PERC  &kp DE_AMPR 				&kp ALT &kp LWIN  &kp LSHFT  &kp LCTRL   &kp RALT
		&kp DE_LABK  &kp DE_RABK &kp DE_SLSH &kp DE_DEG   &kp DE_UNDS    			&kp DE_TILD &kp DE_BSLS &kp DE_PIPE &kp DE_HASH  &kp DEL
					  &trans &trans  				&trans  &trans 
		>;
		};	
		
		tri_layer {
		bindings = <
		&kp NUM_1  &kp NUM_2    &kp NUM_3    &kp NUM_4    &kp NUM_5 			&trans &trans   &trans   &trans  &trans
		&kp F1 &kp F2 &kp F3 &kp F4 &kp F5  						&trans &kp PG_UP  &kp K_VOL_UP &kp K_MUTE &trans 
		&bt BT_CLR  &bt BT_NXT &bt BT_PRV &kp F6 &kp F7   				&trans &kp PG_DN  &kp K_VOL_DN  &trans &trans   
					 &trans &trans  					&trans &trans 
		>;
		};	
        
	};
};
